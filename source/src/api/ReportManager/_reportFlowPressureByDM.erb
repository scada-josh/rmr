    /**
     *
     * @apiName ReportFlowPressureByDM
     * @apiGroup Report Manager
     * @apiVersion 0.1.0
     *
     * @api {post} /reportManager/reportFlowPressureByDM/ reportFlowPressureByDM
     * @apiDescription คำอธิบาย : ในส่วนนี้ทำหน้าที่แสดงรายการ RTU พร้อมค่า Flow, Pressure แยกแต่ละ DM
     *
     */

    function reportFlowPressureByDM($app, $pdo, $db, $conn_db2, $key) {

        $myBranchCode = "";

        /* ************************* */
        /* เริ่มกระบวนการ Extract the jwt from the Header or Session */
        /* ************************* */
        if (!isset($_SESSION['jwt'])) {
            // $jwt = "";

            /*** Extract the jwt from the Bearer ***/
            $request = $app->request();
            $authHeader = $request->headers('authorization');
            list($jwt) = sscanf( (string)$authHeader, 'Bearer %s');

            $myBranchCode = $app->jwt->information->branchCode;

        } else {
            /*** Extract the jwt from Session ***/
            $jwt = $_SESSION['jwt'];

            $token = JWT::decode($jwt, $key, array('HS256'));
            $myBranchCode = $token->information->branchCode;
        }

        /* ************************* */
        /* เริ่มกระบวนการเชื่อมต่อฐานข้อมูล MySQL */
        /* ************************* */
        $reports = array();

        if ($myBranchCode != "ALL") {
            $results = $db->rtu_main_tb->where("branch_code = ? and rtu_status = 1", $myBranchCode)->order("dm_code ASC");
        } else {
            $results = $db->rtu_main_tb->where("rtu_status = 1")->order("dm_code ASC");
        }


        /* ************************* */
        /* เริ่มกระบวนการเชื่อมต่อฐานข้อมูล DB2 ของ WLMA */
        /* ************************* */

        <% if config[:phase_environment] == "Development" %>

            foreach ($results as $result) {

                $result_rtu_pin_code = $db->rtu_pin_code_tb->where("dm_code = ? and enable = 1", $result["dm_code"])->fetch();

                $reports[] = array(
                    "id" => $result["id"],
                    "dm" => $result["dm_code"],
                    "dma" => $result["dma_code"],
                    "branch" => $result["branch_code"],
                    "zone" => $result["zone_code"],
                    "ip_address" => $result["ip_address"],
                    "logger_code" => $result["logger_code"],
                    "comm_type" => $result["comm_type"],
                    "status" => $result["rtu_status"],
                    "remark" => $result["remark"],
                    "rtu_pin_code" => $result_rtu_pin_code["rtu_pin_code"],
                    "lat" => $result_rtu_pin_code["lat"],
                    "lng" => $result_rtu_pin_code["lng"],
                    "location" => $result_rtu_pin_code["location"],
                    "flow_value" => rand(10,100),
                    "flow_timestamp" => mt_rand(1, 84600),
                    "pressure_value" => rand(0,10),
                    "pressure_timestamp" => mt_rand(1, 84600)
                    );

            }

            $rowCount = count($results);

        <% elsif config[:phase_environment] == "Test" %>

 

        <% elsif config[:phase_environment] == "Production" %>

            foreach ($results as $result) {

                $result_rtu_pin_code = $db->rtu_pin_code_tb->where("dm_code = ? and enable = 1", $result["dm_code"])->fetch();


                $sql_flow = "SELECT * from METER_ONLINE_DATA_LAST WHERE METER_CODE = '".$result["dm_code"]."' and LOG_TYPE = 'F'";
                $sql_pressure = "SELECT * from METER_ONLINE_DATA_LAST WHERE METER_CODE = '".$result["dm_code"]."' and LOG_TYPE = 'P'";

                if ($conn_db2) {
                    $stmt_flow = db2_exec($conn_db2, $sql_flow);
                    $stmt_pressure = db2_exec($conn_db2, $sql_pressure);
                }

                $row_flow  = db2_fetch_both($stmt_flow);
                $row_pressure = db2_fetch_both($stmt_pressure);

                $tmpFlowValue = iconv("TIS-620//IGNORE", "UTF-8//IGNORE",$row_flow["VALUE"]);
                $tmpFlowTimestamp = iconv("TIS-620//IGNORE", "UTF-8//IGNORE",$row_flow["RTU_LOG_DT"]);

                $tmpPressureValue = iconv("TIS-620//IGNORE", "UTF-8//IGNORE",$row_pressure["VALUE"]);
                $tmpPressureTimestamp= iconv("TIS-620//IGNORE", "UTF-8//IGNORE",$row_pressure["RTU_LOG_DT"]);

                $reports[] = array(
                    "id" => $result["id"],
                    "dm" => $result["dm_code"],
                    "dma" => $result["dma_code"],
                    "branch" => $result["branch_code"],
                    "zone" => $result["zone_code"],
                    "ip_address" => $result["ip_address"],
                    "logger_code" => $result["logger_code"],
                    "comm_type" => $result["comm_type"],
                    "status" => $result["rtu_status"],
                    "remark" => $result["remark"],
                    "rtu_pin_code" => $result_rtu_pin_code["rtu_pin_code"],
                    "lat" => $result_rtu_pin_code["lat"],
                    "lng" => $result_rtu_pin_code["lng"],
                    "location" => $result_rtu_pin_code["location"],
                    "flow_value" => $tmpFlowValue,
                    "flow_timestamp" => $tmpFlowTimestamp,
                    "pressure_value" => $tmpPressureValue,
                    "pressure_timestamp" => $tmpPressureTimestamp
                    );

            }

            $rowCount = count($results);

        <% end %>



        /* ************************* */
        /* เริ่มกระบวนการส่งค่ากลับ */
        /* ************************* */
        $resultText = "success";

        $reportResult = array("result" =>  $resultText, "count" => $rowCount, "rows" => $reports);
        
        $app->response()->header("Content-Type", "application/json");
        echo json_encode($reportResult);


    };