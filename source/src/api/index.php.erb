---
title: MWA Academic Fun Fest - API
layout: "layout-api"
---
<?php
    date_default_timezone_set("Asia/Bangkok");

    require_once '../../packages/autoload.php';
    

<% if config[:phase_environment] == "Development" %>

    /* Connect Database Manager Partial : Localhost */
    <%= partial "/ConnectDatabase/_connectDB2_Localhost" %>
    <%= partial "/ConnectDatabase/_connectMySQL_Localhost" %>

<% elsif config[:phase_environment] == "Test" %>

    /* Connect Database Manager Partial : Localhost */
    <%= partial "/ConnectDatabase/_connectDB2_Localhost" %>
    <%= partial "/ConnectDatabase/_connectMySQL_Localhost" %>

<% elsif config[:phase_environment] == "Production" %>

    /* Connect Database Manager Partial : Production */
    <%= partial "/ConnectDatabase/_connectDB2_Production" %>
    <%= partial "/ConnectDatabase/_connectMySQL_Production" %>

<% end %>






    /* Secret Key */
    $key = "supersecretkeyyoushouldnotcommittogithub";

    /* Slim framework 2.x */
    $app = new \Slim\Slim();

    use \Firebase\JWT\JWT;
    $app->add(new \Slim\Middleware\JwtAuthentication([
         "secure" => false,
        "relaxed" => ["localhost"],
        "secret" => $key,
        //"path"=> "/user",
        "callback" => function ($options) use ($app) {
            $app->jwt = $options["decoded"];
        },
        "rules" => [
            new \Slim\Middleware\JwtAuthentication\RequestPathRule([
                "path" => ["/token", "/user", 
                           "/rtuManager/informationOnload/", 
                           "/loginManager/checkJWT/", 
                           "/rtuManager/syncRTUFromWLMA/"],
                "passthrough" => ["/user"]
            ]),
            new \Slim\Middleware\JwtAuthentication\RequestMethodRule([
                "passthrough" => ["OPTIONS"]
            ])
        ]
    ]));


    /* proj4php */
    // Use a PSR-4 autoloader for the `proj4php` root namespace.
    use proj4php\Proj4php;
    use proj4php\Proj;
    use proj4php\Point;

    // Initialise Proj4
    $proj4 = new Proj4php();
    // add it to proj4
    $proj4->addDef("EPSG:32647",'+proj=utm +zone=47 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');
    $proj4->addDef("EPSG:24047", '+proj=utm +zone=47 +a=6377276.345 +b=6356075.41314024 +units=m +no_defs');




    /* NuSOAP */
    $client = new nusoap_client("http://58.137.5.126/epodws/service.asmx?wsdl", true);
    // $client->soap_defencoding = 'UTF-8';
    $endpoint = "http://58.137.5.126/epodws/service.asmx?wsdl";
    $client->forceEndpoint = $endpoint;

    $client->soap_defencoding = 'UTF-8';
    $client->decode_utf8 = false; // แก้ปัญหาตัวอักษรภาษาไทยแสดง ???????? (web service unicode characters dispaly as question marks)
    $client->encode_utf8 = true;



    /* Test Manager */
    $app->get('/testManager/getMsg/:name',function($name) use ($app) { getMsg($app, $name); });
    <%= partial "/TestManager/_user" %>
    <%= partial "/TestManager/_login" %>
    <%= partial "/TestManager/_token" %>
    $app->post('/testManager/transformToLatLng/',function() use ($app, $proj4) { transformToLatLng($app, $proj4); });
    $app->get('/testManager/simpleGeoJSON/',function() use ($app) { simpleGeoJSON($app); });
    $app->get('/testManager/callWebService/',function() use ($app, $client) { callWebService($app, $client); });

    /* Login manager */
    $app->post('/loginManager/checkUserPassword/',function() use ($app, $pdo, $db, $conn_db2, $key) { checkUserPassword($app, $pdo, $db, $conn_db2, $key); });
    $app->post('/loginManager/logout/',function() use ($app, $pdo, $db) { logout($app, $pdo, $db); });
    $app->get('/loginManager/getJWT/',function() use ($app) { getJWT($app); });
    $app->post('/loginManager/checkJWT/',function() use ($app, $key) { checkJWT($app, $key); });
    $app->post('/loginManager/checkPermission/',function() use ($app, $pdo, $db, $key) { checkPermission($app, $pdo, $db, $key); });

    /* WLMA manager */
    $app->post('/wlmaManager/checkUserPasswordFromWLMA/',function() use ($app, $pdo, $conn_db2) { checkUserPasswordFromWLMA($app, $pdo, $conn_db2); });
    $app->post('/wlmaManager/reportPressureAverage/',function() use ($app, $pdo, $conn_db2) { reportPressureAverage($app, $pdo, $conn_db2); });
    $app->post('/wlmaManager/reportWLMA1125/',function() use ($app, $pdo, $conn_db2) { reportWLMA1125($app, $pdo, $conn_db2); });
    $app->post('/wlmaManager/reportWaterLeakageByDMA/',function() use ($app, $pdo, $conn_db2) { reportWaterLeakageByDMA($app, $pdo, $conn_db2); });

    /* RTU manager */
    $app->get('/rtuManager/informationOnload/',function() use ($app, $pdo, $conn_db2, $key) { informationOnload($app, $pdo, $conn_db2, $key); });
    $app->get('/rtuManager/listRTUFromBranch/',function() use ($app, $pdo, $db, $conn_db2, $key) { listRTUFromBranch($app, $pdo, $db, $conn_db2, $key); });
    $app->get('/rtuManager/rtuDashboard/',function() use ($app, $pdo, $db, $conn_db2, $key) { rtuDashboard($app, $pdo, $db, $conn_db2, $key); });
    $app->post('/rtuManager/addNewRTU/',function() use ($app, $pdo, $db, $conn_db2, $key) { addNewRTU($app, $pdo, $db, $conn_db2, $key); });
    $app->post('/rtuManager/syncRTUFromWLMA/',function() use ($app, $pdo, $db, $conn_db2, $key) { syncRTUFromWLMA($app, $pdo, $db, $conn_db2, $key); });
    $app->post('/rtuManager/updateLatLngFromFile/',function() use ($app, $pdo, $db) { updateLatLngFromFile($app, $pdo, $db); });
    $app->get('/rtuManager/rtuLocationGeoJSON/',function() use ($app, $pdo, $db, $key) { rtuLocationGeoJSON($app, $pdo, $db, $key); });

    /* RMR manager */
    $app->post('/rmrManager/reportRMRFromYear/',function() use ($app, $pdo, $db) { reportRMRFromYear($app, $pdo, $db); });

    /* REPORT manager */
    $app->post('/reportManager/reportFlowPressureByDM/',function() use ($app, $pdo, $db, $conn_db2, $key) { reportFlowPressureByDM($app, $pdo, $db, $conn_db2, $key); });




    // $corsOptions = array("origin" => "*");
    // $app->post('/loginManager/logout/',\CorsSlim\CorsSlim::routeMiddleware($corsOptions) ,function() use ($app, $pdo, $db) { 
    //     logout($app, $pdo, $db); 
    // });
	


	$app->run();

    /* Test Manager Partial */
    <%= partial "/TestManager/_getMsg" %>
    <%= partial "/TestManager/_transformToLatLng" %>
    <%= partial "/TestManager/_simpleGeoJSON" %>
    <%= partial "/TestManager/_callWebService" %>

    /* Login Manager Partial */
    <%= partial "/LoginManager/_checkUserPassword" %>
    <%= partial "/LoginManager/_logout" %>
    <%= partial "/LoginManager/_getJWT" %>
    <%= partial "/LoginManager/_checkJWT" %>
    <%= partial "/LoginManager/_checkPermission" %>

    /* WLMA Manager Partial */
    <%= partial "/WlmaManager/_checkUserPasswordFromWLMA" %>
    <%= partial "/WlmaManager/_reportPressureAverage" %>
    <%= partial "/WlmaManager/_reportWLMA1125" %>
    <%= partial "/WlmaManager/_reportWaterLeakageByDMA" %>

    /* RTU Manager Partial */
    <%= partial "/RtuManager/_informationOnload" %>
    <%= partial "/RtuManager/_listRTUFromBranch" %>
    <%= partial "/RtuManager/_rtuDashboard" %>
    <%= partial "/RtuManager/_addNewRTU" %>
    <%= partial "/RtuManager/_syncRTUFromWLMA" %>
    <%= partial "/RtuManager/_updateLatLngFromFile" %>
    <%= partial "/RtuManager/_rtuLocationGeoJSON" %>

    /* RMR Manager Partial */
    <%= partial "/RmrManager/_reportRMRFromYear" %>

    /* REPORT Manager Partial */
    <%= partial "/ReportManager/_reportFlowPressureByDM" %>
    
    
?>